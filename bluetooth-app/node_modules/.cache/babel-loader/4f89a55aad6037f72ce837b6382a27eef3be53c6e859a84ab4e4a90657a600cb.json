{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sandr\\\\OneDrive - KTH\\\\Documents\\\\Jobs and Interns\\\\MMS_2025_UI\\\\Testing_MMS\\\\bluetooth-app\\\\src\\\\NMESControl.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useBluetooth } from './BluetoothContext';\nimport BluetoothControl from './BluetoothControl';\nimport styles from './NMESControlPanel.module.css';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NMESControlPanel = () => {\n  _s();\n  const {\n    isConnected,\n    runOptimizationLoop,\n    imuData,\n    startIMU,\n    stopIMU,\n    stopOptimizationLoop,\n    isOptimizationRunning,\n    initializeDevice\n  } = useBluetooth();\n  const [sensor1Data, setSensor1Data] = useState([]);\n  const [sensor2Data, setSensor2Data] = useState([]);\n  const [isMeasuring, setIsMeasuring] = useState(false);\n  const [isInitializing, setIsInitializing] = useState(false);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const startTimeRef = useRef(null);\n  const animationFrameRef = useRef(null);\n  const [currentPair, setCurrentPair] = useState(null);\n  const [bestPair, setBestPair] = useState(null);\n  const [currentBeingTested, setCurrentBeingTested] = useState(null);\n  const [bestCurrent, setBestCurrent] = useState(null);\n  const [minCurrent, setMinCurrent] = useState(15.0);\n  const [maxCurrent, setMaxCurrent] = useState(25.0);\n  const sampleCountRef = useRef(0);\n  useEffect(() => {\n    if (isConnected && isMeasuring) {\n      const interval = setInterval(() => {\n        sampleCountRef.current++;\n        let rawSensor1 = imuData.imu1_changes.length > 0 ? imuData.imu1_changes[imuData.imu1_changes.length - 1] : 0;\n        let rawSensor2 = imuData.imu2_changes.length > 0 ? imuData.imu2_changes[imuData.imu2_changes.length - 1] : 0;\n        setSensor1Data(prevData => [...prevData.slice(-99), {\n          time: sampleCountRef.current,\n          sensorValue: rawSensor1\n        }]);\n        setSensor2Data(prevData => [...prevData.slice(-99), {\n          time: sampleCountRef.current,\n          sensorValue: rawSensor2\n        }]);\n      }, 100);\n      return () => clearInterval(interval);\n    }\n  }, [isConnected, isMeasuring, imuData]);\n  useEffect(() => {\n    if (isOptimizationRunning) {\n      startTimeRef.current = performance.now();\n      const updateElapsedTime = () => {\n        var _startTimeRef$current;\n        if (!isOptimizationRunning) return;\n        const now = performance.now();\n        setElapsedTime(now - ((_startTimeRef$current = startTimeRef.current) !== null && _startTimeRef$current !== void 0 ? _startTimeRef$current : now));\n        animationFrameRef.current = requestAnimationFrame(updateElapsedTime);\n      };\n      animationFrameRef.current = requestAnimationFrame(updateElapsedTime);\n    } else {\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    }\n    return () => {\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    };\n  }, [isOptimizationRunning]);\n  const handleInitialize = async () => {\n    setIsInitializing(true);\n    try {\n      await initializeDevice();\n      console.log('✅ Device initialization complete.');\n    } catch (error) {\n      console.error('❌ Device initialization failed:', error);\n    }\n    setIsInitializing(false);\n  };\n  const handleStartOptimization = async () => {\n    console.log('🟢 Starting optimization...');\n    if (!isMeasuring) {\n      handleStartIMU();\n      await new Promise(res => setTimeout(res, 500));\n    }\n    setElapsedTime(0);\n    setBestPair(null);\n    setCurrentPair(null);\n    setBestCurrent(null);\n    setCurrentBeingTested(null);\n    setSensor1Data([]);\n    setSensor2Data([]);\n    await runOptimizationLoop(pair => setCurrentPair(pair), pair => {\n      setBestPair(pair);\n      handleStopIMU();\n    }, current => setCurrentBeingTested(current), current => setBestCurrent(current), minCurrent, maxCurrent);\n  };\n  const handleStopOptimization = async () => {\n    console.log('🛑 Stopping optimization...');\n    await stopOptimizationLoop();\n    handleStopIMU();\n  };\n  const handleStartIMU = () => {\n    setIsMeasuring(true);\n    startIMU();\n  };\n  const handleStopIMU = () => {\n    setIsMeasuring(false);\n    stopIMU();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/mms_logo_2.png\",\n        alt: \"App Logo\",\n        className: styles.logo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.heading,\n        children: \"MMS - NMES Optimization (Frontend Demo)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.topContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttonContainer,\n        children: /*#__PURE__*/_jsxDEV(BluetoothControl, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), isConnected && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.controlBox,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Search Algorithm & Sensor Control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.inputGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.inputContainer,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Min Current (mA)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: minCurrent,\n              onChange: e => setMinCurrent(parseFloat(e.target.value)),\n              step: \"0.1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.inputContainer,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Max Current (mA)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: maxCurrent,\n              onChange: e => setMaxCurrent(parseFloat(e.target.value)),\n              step: \"0.1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.buttonContainer,\n          style: {\n            marginTop: '15px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.button,\n            onClick: handleInitialize,\n            disabled: !isConnected || isInitializing,\n            children: \"Initialize Device\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.buttonContainer,\n          style: {\n            marginTop: '15px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.button,\n            onClick: handleStartOptimization,\n            disabled: isOptimizationRunning,\n            children: \"Start Optimization\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.button,\n            onClick: handleStopOptimization,\n            disabled: !isOptimizationRunning,\n            children: \"Stop Optimization\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Elapsed Time: \", (elapsedTime / 1000).toFixed(3), \" seconds\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.buttonContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.button,\n            onClick: handleStartIMU,\n            disabled: !isConnected || isMeasuring,\n            children: \"Start Sensor(s)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.button,\n            onClick: handleStopIMU,\n            disabled: !isConnected || !isMeasuring,\n            children: \"Stop Sensor(s)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), isConnected && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.contentContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.leftPanel,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.electrodeBox,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Electrode Pair & Current\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Pair and current being tested.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Current Pair: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"valueBox\",\n              children: currentPair ? `${currentPair[0]} - ${currentPair[1]}` : '-'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Current Being Tested: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"valueBox\",\n              children: currentBeingTested !== null && currentBeingTested !== void 0 ? currentBeingTested : '-'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Best Pair: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `valueBox ${bestPair ? 'green' : ''}`,\n              children: bestPair ? `${bestPair[0]} - ${bestPair[1]}` : '-'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Best Current: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `valueBox ${bestCurrent ? 'green' : ''}`,\n              children: bestCurrent !== null && bestCurrent !== void 0 ? bestCurrent : '-'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.rightPanel,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.chartContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Sensor 1 Readings \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n            width: 600,\n            height: 200,\n            data: sensor1Data,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              domain: [0, 10]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: \"sensorValue\",\n              stroke: \"#8884d8\",\n              strokeWidth: 2,\n              name: \"Raw Sensor 1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.chartContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Sensor 2 Readings \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n            width: 600,\n            height: 200,\n            data: sensor2Data,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              domain: [0, 10]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: \"sensorValue\",\n              stroke: \"#82ca9d\",\n              strokeWidth: 2,\n              name: \"Raw Sensor 2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n_s(NMESControlPanel, \"TO95VbAANvKJbN44PGj54GUdIBI=\", false, function () {\n  return [useBluetooth];\n});\n_c = NMESControlPanel;\nexport default NMESControlPanel;\nvar _c;\n$RefreshReg$(_c, \"NMESControlPanel\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useBluetooth","BluetoothControl","styles","LineChart","Line","CartesianGrid","XAxis","YAxis","Tooltip","Legend","jsxDEV","_jsxDEV","NMESControlPanel","_s","isConnected","runOptimizationLoop","imuData","startIMU","stopIMU","stopOptimizationLoop","isOptimizationRunning","initializeDevice","sensor1Data","setSensor1Data","sensor2Data","setSensor2Data","isMeasuring","setIsMeasuring","isInitializing","setIsInitializing","elapsedTime","setElapsedTime","startTimeRef","animationFrameRef","currentPair","setCurrentPair","bestPair","setBestPair","currentBeingTested","setCurrentBeingTested","bestCurrent","setBestCurrent","minCurrent","setMinCurrent","maxCurrent","setMaxCurrent","sampleCountRef","interval","setInterval","current","rawSensor1","imu1_changes","length","rawSensor2","imu2_changes","prevData","slice","time","sensorValue","clearInterval","performance","now","updateElapsedTime","_startTimeRef$current","requestAnimationFrame","cancelAnimationFrame","handleInitialize","console","log","error","handleStartOptimization","handleStartIMU","Promise","res","setTimeout","pair","handleStopIMU","handleStopOptimization","className","container","children","header","src","alt","logo","fileName","_jsxFileName","lineNumber","columnNumber","heading","topContainer","buttonContainer","controlBox","inputGroup","inputContainer","type","value","onChange","e","parseFloat","target","step","style","marginTop","button","onClick","disabled","toFixed","contentContainer","leftPanel","electrodeBox","rightPanel","chartContainer","width","height","data","strokeDasharray","dataKey","domain","stroke","strokeWidth","name","_c","$RefreshReg$"],"sources":["C:/Users/sandr/OneDrive - KTH/Documents/Jobs and Interns/MMS_2025_UI/Testing_MMS/bluetooth-app/src/NMESControl.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport { useBluetooth } from './BluetoothContext'\r\nimport BluetoothControl from './BluetoothControl'\r\nimport styles from './NMESControlPanel.module.css'\r\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from 'recharts'\r\n\r\nconst NMESControlPanel: React.FC = () => {\r\n  const {\r\n    isConnected,\r\n    runOptimizationLoop,\r\n    imuData,\r\n    startIMU,\r\n    stopIMU,\r\n    stopOptimizationLoop,\r\n    isOptimizationRunning,\r\n    initializeDevice\r\n  } = useBluetooth()\r\n\r\n  const [sensor1Data, setSensor1Data] = useState<{ time: number; sensorValue: number }[]>([])\r\n  const [sensor2Data, setSensor2Data] = useState<{ time: number; sensorValue: number }[]>([])\r\n\r\n  const [isMeasuring, setIsMeasuring] = useState(false)\r\n  const [isInitializing, setIsInitializing] = useState(false)\r\n  const [elapsedTime, setElapsedTime] = useState(0)\r\n  const startTimeRef = useRef<number | null>(null)\r\n  const animationFrameRef = useRef<number | null>(null)\r\n\r\n  const [currentPair, setCurrentPair] = useState<[number, number] | null>(null)\r\n  const [bestPair, setBestPair] = useState<[number, number] | null>(null)\r\n\r\n  const [currentBeingTested, setCurrentBeingTested] = useState<number | null>(null)\r\n  const [bestCurrent, setBestCurrent] = useState<number | null>(null)\r\n\r\n  const [minCurrent, setMinCurrent] = useState(15.0)\r\n  const [maxCurrent, setMaxCurrent] = useState(25.0)\r\n\r\n  const sampleCountRef = useRef(0)\r\n\r\n  useEffect(() => {\r\n    if (isConnected && isMeasuring) {\r\n      const interval = setInterval(() => {\r\n        sampleCountRef.current++\r\n\r\n        let rawSensor1 = imuData.imu1_changes.length > 0 ? imuData.imu1_changes[imuData.imu1_changes.length - 1] : 0\r\n        let rawSensor2 = imuData.imu2_changes.length > 0 ? imuData.imu2_changes[imuData.imu2_changes.length - 1] : 0\r\n\r\n        setSensor1Data((prevData) => [\r\n          ...prevData.slice(-99),\r\n          { time: sampleCountRef.current, sensorValue: rawSensor1 }\r\n        ])\r\n\r\n        setSensor2Data((prevData) => [\r\n          ...prevData.slice(-99),\r\n          { time: sampleCountRef.current, sensorValue: rawSensor2 }\r\n        ])\r\n\r\n      }, 100)\r\n\r\n      return () => clearInterval(interval)\r\n    }\r\n  }, [isConnected, isMeasuring, imuData])\r\n\r\n  useEffect(() => {\r\n    if (isOptimizationRunning) {\r\n      startTimeRef.current = performance.now()\r\n      const updateElapsedTime = () => {\r\n        if (!isOptimizationRunning) return\r\n        const now = performance.now()\r\n        setElapsedTime(now - (startTimeRef.current ?? now))\r\n        animationFrameRef.current = requestAnimationFrame(updateElapsedTime)\r\n      }\r\n      animationFrameRef.current = requestAnimationFrame(updateElapsedTime)\r\n    } else {\r\n      if (animationFrameRef.current) {\r\n        cancelAnimationFrame(animationFrameRef.current)\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      if (animationFrameRef.current) {\r\n        cancelAnimationFrame(animationFrameRef.current)\r\n      }\r\n    }\r\n  }, [isOptimizationRunning])\r\n\r\n  const handleInitialize = async () => {\r\n    setIsInitializing(true)\r\n    try {\r\n      await initializeDevice()\r\n      console.log('✅ Device initialization complete.')\r\n    } catch (error) {\r\n      console.error('❌ Device initialization failed:', error)\r\n    }\r\n    setIsInitializing(false)\r\n  }\r\n\r\n  const handleStartOptimization = async () => {\r\n    console.log('🟢 Starting optimization...')\r\n    if (!isMeasuring) {\r\n      handleStartIMU()\r\n      await new Promise(res => setTimeout(res, 500))\r\n    }\r\n    setElapsedTime(0)\r\n    setBestPair(null)\r\n    setCurrentPair(null)\r\n    setBestCurrent(null)\r\n    setCurrentBeingTested(null)\r\n    setSensor1Data([])\r\n    setSensor2Data([])\r\n\r\n    await runOptimizationLoop(\r\n      (pair) => setCurrentPair(pair),\r\n      (pair) => { setBestPair(pair); handleStopIMU(); },\r\n      (current) => setCurrentBeingTested(current),\r\n      (current) => setBestCurrent(current),\r\n      minCurrent,\r\n      maxCurrent\r\n    )\r\n  }\r\n\r\n  const handleStopOptimization = async () => {\r\n    console.log('🛑 Stopping optimization...')\r\n    await stopOptimizationLoop()\r\n    handleStopIMU()\r\n  }\r\n\r\n  const handleStartIMU = () => {\r\n    setIsMeasuring(true)\r\n    startIMU()\r\n  }\r\n\r\n  const handleStopIMU = () => {\r\n    setIsMeasuring(false)\r\n    stopIMU()\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.header}>\r\n        <img src=\"/mms_logo_2.png\" alt=\"App Logo\" className={styles.logo} />\r\n        <h1 className={styles.heading}>MMS - NMES Optimization (Frontend Demo)</h1>\r\n      </div>\r\n\r\n      <div className={styles.topContainer}>\r\n        <div className={styles.buttonContainer}>\r\n          <BluetoothControl />\r\n        </div>\r\n\r\n        {isConnected && (\r\n          <div className={styles.controlBox}>\r\n            <h2>Search Algorithm & Sensor Control</h2>\r\n\r\n            <div className={styles.inputGroup}>\r\n              <div className={styles.inputContainer}>\r\n                <label>Min Current (mA)</label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={minCurrent}\r\n                  onChange={(e) => setMinCurrent(parseFloat(e.target.value))}\r\n                  step=\"0.1\"\r\n                />\r\n              </div>\r\n\r\n              <div className={styles.inputContainer}>\r\n                <label>Max Current (mA)</label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={maxCurrent}\r\n                  onChange={(e) => setMaxCurrent(parseFloat(e.target.value))}\r\n                  step=\"0.1\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className={styles.buttonContainer} style={{ marginTop: '15px' }}>\r\n              <button\r\n                className={styles.button}\r\n                onClick={handleInitialize}\r\n                disabled={!isConnected || isInitializing}\r\n              >\r\n                Initialize Device\r\n              </button>\r\n            </div>\r\n\r\n            <div className={styles.buttonContainer} style={{ marginTop: '15px' }}>\r\n              <button\r\n                className={styles.button}\r\n                onClick={handleStartOptimization}\r\n                disabled={isOptimizationRunning}\r\n              >\r\n                Start Optimization\r\n              </button>\r\n\r\n              <button\r\n                className={styles.button}\r\n                onClick={handleStopOptimization}\r\n                disabled={!isOptimizationRunning}\r\n              >\r\n                Stop Optimization\r\n              </button>\r\n            </div>\r\n\r\n            <p>Elapsed Time: {(elapsedTime / 1000).toFixed(3)} seconds</p>\r\n\r\n            <div className={styles.buttonContainer}>\r\n              <button className={styles.button} onClick={handleStartIMU} disabled={!isConnected || isMeasuring}>\r\n                Start Sensor(s)\r\n              </button>\r\n              <button className={styles.button} onClick={handleStopIMU} disabled={!isConnected || !isMeasuring}>\r\n                Stop Sensor(s)\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {isConnected && (\r\n        <div className={styles.contentContainer}>\r\n          <div className={styles.leftPanel}>\r\n            <div className={styles.electrodeBox}>\r\n              <h2>Electrode Pair & Current</h2>\r\n              <p>Pair and current being tested.</p>\r\n              <div>\r\n                <span>Current Pair: </span>\r\n                <span className=\"valueBox\">{currentPair ? `${currentPair[0]} - ${currentPair[1]}` : '-'}</span>\r\n              </div>\r\n\r\n              <div>\r\n                <span>Current Being Tested: </span>\r\n                <span className=\"valueBox\">{currentBeingTested ?? '-'}</span>\r\n              </div>\r\n\r\n              <div>\r\n                <span>Best Pair: </span>\r\n                <span className={`valueBox ${bestPair ? 'green' : ''}`}>{bestPair ? `${bestPair[0]} - ${bestPair[1]}` : '-'}</span>\r\n              </div>\r\n\r\n              <div>\r\n                <span>Best Current: </span>\r\n                <span className={`valueBox ${bestCurrent ? 'green' : ''}`}>{bestCurrent ?? '-'}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={styles.rightPanel}>\r\n            <div className={styles.chartContainer}>\r\n              <h3>Sensor 1 Readings </h3>\r\n              <LineChart width={600} height={200} data={sensor1Data}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"time\" />\r\n                <YAxis domain={[0, 10]} />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Line type=\"monotone\" dataKey=\"sensorValue\" stroke=\"#8884d8\" strokeWidth={2} name=\"Raw Sensor 1\" />\r\n              </LineChart>\r\n            </div>\r\n\r\n            <div className={styles.chartContainer}>\r\n              <h3>Sensor 2 Readings </h3>\r\n              <LineChart width={600} height={200} data={sensor2Data}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"time\" />\r\n                <YAxis domain={[0, 10]} />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Line type=\"monotone\" dataKey=\"sensorValue\" stroke=\"#82ca9d\" strokeWidth={2} name=\"Raw Sensor 2\" />\r\n              </LineChart>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NMESControlPanel\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}